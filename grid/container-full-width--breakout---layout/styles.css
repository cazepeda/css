:root {
    --color-scheme: dark;

    --font-family: system-ui;

    --fs-300: clamp(0.94rem, calc(0.92rem + 0.08vw), 0.98rem);
    --fs-400: clamp(1.13rem, calc(1.06rem + 0.33vw), 1.31rem);
    --fs-500: clamp(1.35rem, calc(1.21rem + 0.69vw), 1.75rem);
    --fs-600: clamp(1.62rem, calc(1.37rem + 1.24vw), 2.33rem);
    --fs-700: clamp(1.94rem, calc(1.54rem + 2.03vw), 3.11rem);
    --fs-800: clamp(2.33rem, calc(1.7rem + 3.15vw), 4.14rem);
    --fs-900: clamp(2.8rem, calc(1.85rem + 4.74vw), 5.52rem);

    --clr-primary-300: hsl(219, 76%, 55%);
    --clr-primary-400: hsl(219, 76%, 40%);
    --clr-primary-500: hsl(219, 76%, 25%);
    --clr-secondary-300: hsl(269, 75%, 55%);
    --clr-secondary-400: hsl(269, 75%, 40%);
    --clr-secondary-500: hsl(269, 75%, 25%);
    --clr-accent-200: hsl(358, 85%, 80%);
    --clr-accent-300: hsl(358, 72%, 65%);
    --clr-accent-400: hsl(358, 72%, 50%);
    --clr-accent-500: hsl(358, 72%, 35%);
}

/* Credit: https://andy-bell.co.uk/a-more-modern-css-reset/ */

/* Box sizing rules */
*,
*::before,
*::after {
    box-sizing: border-box;
}

/* Prevent font size inflation */
html {
    -moz-text-size-adjust: none;
    -webkit-text-size-adjust: none;
    text-size-adjust: none;
}

/* Remove default margin in favour of better control in authored CSS */
body,
h1,
h2,
h3,
h4,
p,
figure,
blockquote,
dl,
dd {
    margin: 0;
}

/* Remove list styles on ul, ol elements with a list role, which suggests default styling will be removed */
ul[role='list'],
ol[role='list'] {
    list-style: none;
}

/* Set core body defaults */
body {
    min-height: 100vh;
    line-height: 1.5;
}

/* Set shorter line heights on headings and interactive elements */
h1,
h2,
h3,
h4,
button,
input,
label {
    line-height: 1.1;
}

/* Balance text wrapping on headings */
h1,
h2,
h3,
h4 {
    text-wrap: balance;
}

/* A elements that don't have a class get default styles */
a:not([class]) {
    text-decoration-skip-ink: auto;
    color: currentColor;
}

/* Make images easier to work with */
img,
picture {
    width: 100%;
    display: block;
    object-fit: cover;
}

/* Inherit fonts for inputs and buttons */
input,
button,
textarea,
select,
address {
    font: inherit;
}

/* Make sure textareas without a rows attribute are not tiny */
textarea:not([rows]) {
    min-height: 10em;
}

/* Anything that has been anchored to should have extra scroll margin */
:target {
    scroll-margin-block: 5ex;
}
/* end css-reset */

/* header styles */
.primary-header,
.primary-footer {
    padding-block: 1rem;
    margin-block-end: 3rem;
    background: var(--clr-accent-200);
    color: var(--clr-primary-500);
}
.primary-footer {
    margin-block-start: 3rem;
    margin-block-end: 0;
}
.primary-header__layout {
    display: flex;
    align-items: center;
    justify-content: space-between;
}

.logo {
    max-width: 250px;
}

nav ul {
    list-style: none;
    margin: 0;
    padding: 0;
    display: flex;
    flex-wrap: wrap;
    gap: max(5vw, 1rem);
}

nav a {
    color: inherit;
    text-decoration: none;
}

nav a:hover,
nav a:focus {
    color: var(--clr-accent-500);
    text-decoration: underline;
}
/* end header styles */

/* utility classes */
.bg-primary {
    background: var(--clr-primary-500);
}
.bg-primary > * {
    color: #fff;
}

.centered-item {
    margin-left: auto;
    margin-right: auto;
}
/* end utility classes */

/* .main styles */
.main > * {
    margin-block-end: var(--fs-500);
}
/* end .main styles */

/* start grid styles */
.content-grid {
    --padding-inline: 1rem;
    --content-max-width: 900px;
    --breakout-max-width: 1200px;

    --breakout-size: calc((var(--breakout-max-width) - var(--content-max-width)) / 2);

    display: grid;
    grid-template-columns:
        [full-width-start] minmax(var(--padding-inline), 1fr) [breakout-start] minmax(0, var(--breakout-size)) [content-start] min(100% - (var(--padding-inline) * 2),
            var(--content-max-width)) [content-end] minmax(0, var(--breakout-size)) [breakout-end] minmax(var(--padding-inline), 1fr) [full-width-end];
}

.content-grid > :not(.breakout, .full-width),
.full-width > :not(.breakout, .full-width) {
    grid-column: content;
}

.content-grid > .breakout {
    grid-column: breakout;
}

.content-grid > .full-width {
    grid-column: full-width;

    display: grid;
    grid-template-columns: inherit;
}